syntax = "proto3";

package scalekit.v1.user_profile_attributes;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/user_profile_attributes";

service UserProfileAttributeService {
  rpc CreateUserProfileAttribute(CreateUserProfileAttributeRequest) returns (CreateUserProfileAttributeResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {
      post: "/api/v1/user-profile-attributes"
      body: "user_profile_attribute"
    };
  }

  rpc ListUserProfileAttributes(google.protobuf.Empty) returns (ListUserProfileAttributesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {
      get: "/api/v1/user-profile-attributes"
    };
  }

/*  rpc UpdateUserProfileAttributes(UpdateUserProfileAttributesRequest) returns (UpdateUserProfileAttributesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {
      put: "/api/v1/user-profile-attributes"
      body: "user_profile_attributes"
    };
  }*/

  rpc UpdateUserProfileAttribute(UpdateUserProfileAttributeRequest) returns (UpdateUserProfileAttributeResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {
      patch: "/api/v1/user-profile-attributes/{key}"
      body: "user_profile_attribute"
    };
  }

  rpc DeleteUserProfileAttribute(DeleteUserProfileAttributeRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {
      delete: "/api/v1/user-profile-attributes/{key}"
    };
  }
}

message UserProfileAttribute {
  string key = 1 [(buf.validate.field).string = {
    min_len: 3,
    max_len: 25
  },
    (buf.validate.field).string.pattern = "^[a-zA-Z-_]+$"
  ];
  bool enabled = 2;
  bool required = 3;
  string label = 4 [(buf.validate.field).string = {
    min_len: 3,
    max_len: 250
  }];
  UserProfileAttributeDatatype datatype = 5[(buf.validate.field).enum = {not_in: [0]}];
  UserProfileAttributeCategory category = 6[
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
  string default_saml_mapping = 7[
    (buf.validate.field).string = {
    min_len: 0,
    max_len: 25
  },
    (buf.validate.field).string.pattern = "^[a-zA-Z-_]+|$"];
  string default_oidc_mapping = 8[
    (buf.validate.field).string = {
    min_len: 0,
    max_len: 25
    },
    (buf.validate.field).string.pattern = "^[a-zA-Z-_]+|$"
  ];
}

enum UserProfileAttributeDatatype {
  UNSPECIFIED_DATATYPE = 0;
  STRING = 1;
  NUMBER = 2;
  BOOL = 3;
  ARRAY = 4;
  OBJECT = 5;
}

enum UserProfileAttributeCategory {
  UNSPECIFIED_CATEGORY = 0;
  STANDARD = 1;
  CUSTOM = 2;
}

message CreateUserProfileAttributeRequest {
  UserProfileAttribute user_profile_attribute = 1[(buf.validate.field).required = true];
}

message CreateUserProfileAttributeResponse {
  UserProfileAttribute user_profile_attribute = 1;
}

message ListUserProfileAttributesResponse {
  repeated UserProfileAttribute user_profile_attributes = 1;
}

/*message UpdateUserProfileAttributesRequest {
  repeated UserProfileAttribute user_profile_attributes = 1[
    (buf.validate.field).required = true,
      (buf.validate.field).repeated.min_items = 1,
      (buf.validate.field).repeated.max_items = 100
  ];
}

message UpdateUserProfileAttributesResponse {
  repeated UserProfileAttribute user_profile_attributes = 1;
}*/

message UpdateUserProfileAttributeRequest {
  string key = 1 [(buf.validate.field).string = {
    min_len: 3,
    max_len: 250
  }];
  UserProfileAttribute user_profile_attribute = 2[(buf.validate.field).required = true];
}

message UpdateUserProfileAttributeResponse {
  UserProfileAttribute user_profile_attribute = 1;
}

message DeleteUserProfileAttributeRequest {
  string key = 1 [(buf.validate.field).string = {
    min_len: 3,
    max_len: 250
  }];
}


