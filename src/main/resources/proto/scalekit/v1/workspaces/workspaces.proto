syntax = "proto3";

package scalekit.v1.workspaces;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/workspaces";

service WorkspaceService {
  rpc CreateWorkspace(CreateWorkspaceRequest) returns (CreateWorkspaceResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: NONE};
    option (google.api.http) = {
      post: "/api/v1/signup"
      body: "workspace"
    };
  }

  rpc GetWorkspace(GetWorkspaceRequest) returns (GetWorkspaceResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};
    option (google.api.http) = {get: "/api/v1/workspaces/{id}"};
  }

  rpc GetCurrentWorkspace(GetCurrentWorkspaceRequest) returns (GetWorkspaceResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION};
    option (google.api.http) = {get: "/api/v1/workspaces:this"};
  }

  rpc UpdateWorkspace(UpdateWorkspaceRequest) returns (UpdateWorkspaceResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};
    option (google.api.http) = {
      patch: "/api/v1/workspaces/{id}"
      body: "workspace"
    };
  }

  rpc UpdateCurrentWorkspace(UpdateCurrentWorkspaceRequest) returns (UpdateWorkspaceResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION};
    option (google.api.http) = {
      patch: "/api/v1/workspaces:this"
      body: "workspace"
    };
  }
}

message Workspace {
  string id = 1 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 32,
    prefix: "env"
  }];
  google.protobuf.Timestamp create_time = 2;
  google.protobuf.Timestamp update_time = 3;
  string display_name = 4 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 200
  }];
  scalekit.v1.commons.RegionCode region_code = 6;
}

message CreateWorkspace {
  string email = 1 [(buf.validate.field).cel = {
    id: "valid_email",
    message: "email must be a valid email",
    expression: "this.isEmail()"
  }];
  optional string company = 2 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 256
  }];
  optional YesNo send_welcome_email = 3;
}

enum YesNo {
  YES = 0;
  NO = 1;
}

message UpdateWorkspace {
  string display_name = 1 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 256
  }];
}

message CreateWorkspaceRequest {
  CreateWorkspace workspace = 1 [(buf.validate.field).required = true];
}

message CreateWorkspaceResponse {
  Workspace workspace = 1;
  string link = 2;
}

message UpdateWorkspaceRequest {
  string id = 1 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 32,
    prefix: "wks"
  }];
  UpdateWorkspace workspace = 2 [(buf.validate.field).required = true];
}

message UpdateCurrentWorkspaceRequest {
  UpdateWorkspace workspace = 1 [(buf.validate.field).required = true];
}

message UpdateWorkspaceResponse {
  Workspace workspace = 1;
}

message GetWorkspaceRequest {
  string id = 1 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 32,
    prefix: "wks"
  }];
}

message GetCurrentWorkspaceRequest {}

message GetWorkspaceResponse {
  Workspace workspace = 1;
}
