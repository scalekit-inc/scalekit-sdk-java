// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalekit/v1/auth/auth.proto

// Protobuf Java Version: 3.25.3
package com.scalekit.grpc.scalekit.v1.auth;

/**
 * Protobuf enum {@code scalekit.v1.auth.Intent}
 */
public enum Intent
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>INTENT_UNSPECIFIED = 0;</code>
   */
  INTENT_UNSPECIFIED(0),
  /**
   * <code>sign_in = 1;</code>
   */
  sign_in(1),
  /**
   * <code>sign_up = 2;</code>
   */
  sign_up(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>INTENT_UNSPECIFIED = 0;</code>
   */
  public static final int INTENT_UNSPECIFIED_VALUE = 0;
  /**
   * <code>sign_in = 1;</code>
   */
  public static final int sign_in_VALUE = 1;
  /**
   * <code>sign_up = 2;</code>
   */
  public static final int sign_up_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Intent valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Intent forNumber(int value) {
    switch (value) {
      case 0: return INTENT_UNSPECIFIED;
      case 1: return sign_in;
      case 2: return sign_up;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Intent>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Intent> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Intent>() {
          public Intent findValueByNumber(int number) {
            return Intent.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.scalekit.grpc.scalekit.v1.auth.AuthProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Intent[] VALUES = values();

  public static Intent valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Intent(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:scalekit.v1.auth.Intent)
}

