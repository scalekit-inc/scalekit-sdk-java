// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalekit/v1/auth/passwordless.proto

// Protobuf Java Version: 3.25.3
package com.scalekit.grpc.scalekit.v1.auth.passwordless;

public final class PasswordlessProto {
  private PasswordlessProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#scalekit/v1/auth/passwordless.proto\022\035s" +
      "calekit.v1.auth.passwordless\032\033buf/valida" +
      "te/validate.proto\032\034google/api/annotation" +
      "s.proto\032\037google/api/field_behavior.proto" +
      "\032\033google/protobuf/empty.proto\032\034google/pr" +
      "otobuf/struct.proto\032\037google/protobuf/tim" +
      "estamp.proto\032.protoc-gen-openapiv2/optio" +
      "ns/annotations.proto\032!scalekit/v1/common" +
      "s/commons.proto\032!scalekit/v1/options/opt" +
      "ions.proto\"\312\020\n\027SendPasswordlessRequest\022\257" +
      "\001\n\005email\030\001 \001(\tB\230\001\222A\205\0012kEmail address whe" +
      "re the passwordless authentication crede" +
      "ntials will be sent. Must be a valid ema" +
      "il format.J\026\"john.doe@example.com\"\272H\014r\007\020" +
      "\001\030\300\002`\001\310\001\001R\005email\022\246\002\n\010template\030\002 \001(\0162+.sc" +
      "alekit.v1.auth.passwordless.TemplateType" +
      "B\327\001\222A\313\0012\276\001Specifies the authentication i" +
      "ntent for the passwordless request. Use " +
      "SIGNIN for existing users or SIGNUP for " +
      "new user registration. This affects the " +
      "email template and user experience flow." +
      "J\010\"SIGNIN\"\272H\005\202\001\002\020\001H\000R\010template\210\001\001\022\251\002\n\022ma" +
      "giclink_auth_uri\030\003 \001(\tB\365\001\222A\344\0012\257\001Your app" +
      "lication\'s callback URL where users will" +
      " be redirected after clicking the magic " +
      "link in their email. The link token will" +
      " be appended as a query parameter as lin" +
      "k_tokenJ0\"https://yourapp.com/auth/passw" +
      "ordless/callback\"\340A\001\272H\007r\005\020\001\030\350\007H\001R\020magicl" +
      "inkAuthUri\210\001\001\022\233\002\n\005state\030\004 \001(\tB\377\001\222A\356\0012\331\001C" +
      "ustom state parameter that will be retur" +
      "ned unchanged in the verification respon" +
      "se. Use this to maintain application sta" +
      "te between the authentication request an" +
      "d callback, such as the intended destina" +
      "tion after loginJ\020\"d62ivasry29lso\"\340A\001\272H\007" +
      "r\005\020\001\030\350\007H\002R\005state\210\001\001\022\246\001\n\nexpires_in\030\005 \001(\r" +
      "B\201\001\222A{2tTime in seconds until the passwo" +
      "rdless authentication expires. If not sp" +
      "ecified, defaults to 300 seconds (5 minu" +
      "tes)J\003300\340A\001H\003R\texpiresIn\210\001\001\022\335\005\n\022templat" +
      "e_variables\030\006 \003(\0132M.scalekit.v1.auth.pas" +
      "swordless.SendPasswordlessRequest.Templa" +
      "teVariablesEntryB\336\004\222A\317\0042\232\004A set of key-v" +
      "alue pairs to personalize the email temp" +
      "late.\n\n* You may include up to 30 key-va" +
      "lue pairs.\n* The following variable name" +
      "s are reserved by the system and cannot " +
      "be supplied: `otp`, `expiry_time_relativ" +
      "e`, `link`, `expire_time`, `expiry_time`" +
      ".\n* Every variable referenced in your em" +
      "ail template must be included as a key-v" +
      "alue pair.\n\nUse these variables to inser" +
      "t custom information, such as a team nam" +
      "e, URL or the user\'s employee ID. All va" +
      "riables are interpolated before the emai" +
      "l is sent, regardless of the email provi" +
      "der.J0{\"custom_variable_key\": \"custom_va" +
      "riable_value\"}\340A\001\272H\005\232\001\002\020\036R\021templateVaria" +
      "bles\032D\n\026TemplateVariablesEntry\022\020\n\003key\030\001 " +
      "\001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001B\013\n\t_t" +
      "emplateB\025\n\023_magiclink_auth_uriB\010\n\006_state" +
      "B\r\n\013_expires_in\"\234\007\n\030SendPasswordlessResp" +
      "onse\022\305\001\n\017auth_request_id\030\001 \001(\tB\234\001\222A\225\0012]U" +
      "nique identifier for this passwordless a" +
      "uthentication request. Use this ID to re" +
      "send emails.J4\"h5Y8kT5RVwaea5WEgW4n-6C-a" +
      "O_-fuTUW7Vb9-Rh3AcY9qxZqQ\"\340A\003R\rauthReque" +
      "stId\022\314\001\n\nexpires_at\030\002 \001(\003B\254\001\222A\245\0012\226\001Unix " +
      "timestamp (seconds since epoch) when the" +
      " passwordless authentication will expire" +
      ". After this time, the OTP or magic link" +
      " will no longer be valid.J\n1748696575\340A\003" +
      "R\texpiresAt\022\276\001\n\nexpires_in\030\003 \001(\rB\236\001\222A\227\0012" +
      "\217\001Number of seconds from now until the p" +
      "asswordless authentication expires. This" +
      " is a convenience field calculated from " +
      "the expires_at timestamp.J\003300\340A\003R\texpir" +
      "esIn\022\247\002\n\021passwordless_type\030\004 \001(\0162/.scale" +
      "kit.v1.auth.passwordless.PasswordlessTyp" +
      "eB\310\001\222A\274\0012\262\001Type of passwordless authenti" +
      "cation that was sent via email. OTP send" +
      "s a numeric code, LINK sends a clickable" +
      " magic link, and LINK_OTP provides both " +
      "options for user convenience.J\005\"OTP\"\272H\005\202" +
      "\001\002\020\001R\020passwordlessType\"\264\006\n\031VerifyPasswor" +
      "dLessRequest\022\275\001\n\004code\030\001 \001(\tB\246\001\222A\231\0012\214\001The" +
      " Verification Code (OTP) received via em" +
      "ail. This is typically a 6-digit numeric" +
      " code that users enter manually to verif" +
      "y their identity.J\010\"123456\"\272H\006r\004\020\001\030\024H\000R\004" +
      "code\022\212\002\n\nlink_token\030\002 \001(\tB\350\001\222A\333\0012\260\001The u" +
      "nique token from the magic link URL rece" +
      "ived via email. Extract this token when " +
      "users click the magic link and are redir" +
      "ected to your application to later verif" +
      "y the user.J&\"afe9d61c-d80d-4020-a8ee-61" +
      "765ab71cb3\"\272H\006r\004\020\001\030dH\000R\tlinkToken\022\242\002\n\017au" +
      "th_request_id\030\003 \001(\tB\364\001\222A\350\0012\257\001The authent" +
      "ication request identifier returned from" +
      " the send passwordless email endpoint. R" +
      "equired when verifying OTP codes to link" +
      " the verification with the original requ" +
      "est.J4\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fuTUW" +
      "7Vb9-Rh3AcY9qxZqQ\"\272H\005r\003\030\310\001H\001R\rauthReques" +
      "tId\210\001\001B\021\n\017auth_credentialB\022\n\020_auth_reque" +
      "st_id\"\301\002\n\031ResendPasswordlessRequest\022\243\002\n\017" +
      "auth_request_id\030\001 \001(\tB\372\001\222A\351\0012\260\001The authe" +
      "ntication request identifier from the or" +
      "iginal send passwordless email request. " +
      "Use this to resend the Verification Code" +
      " (OTP) or Magic Link to the same email a" +
      "ddress.J4\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fu" +
      "TUW7Vb9-Rh3AcY9qxZqQ\"\272H\nr\005\020\001\030\310\001\310\001\001R\rauth" +
      "RequestId\"\224\007\n\032VerifyPasswordLessResponse" +
      "\022\274\001\n\005email\030\001 \001(\tB\245\001\222A\236\0012\203\001Email address " +
      "of the successfully authenticated user. " +
      "This confirms which email account was ve" +
      "rified through the passwordless flow.J\026\"" +
      "john.doe@example.com\"\340A\003R\005email\022\350\001\n\005stat" +
      "e\030\002 \001(\tB\314\001\222A\305\0012\255\001The custom state parame" +
      "ter that was provided in the original au" +
      "thentication request, returned unchanged" +
      ". Use this to restore your application\'s" +
      " context after authentication.J\023\"kdt7yia" +
      "g28t341fr1\"\340A\003H\000R\005state\210\001\001\022\313\001\n\010template\030" +
      "\003 \001(\0162+.scalekit.v1.auth.passwordless.Te" +
      "mplateTypeB}\222Ar2fSpecifies which email t" +
      "emplate to choose. For User Signin choos" +
      "e SIGNIN and for User Signup use SIGNUPJ" +
      "\010\"SIGNIN\"\272H\005\202\001\002\020\001H\001R\010template\210\001\001\022\346\001\n\021pas" +
      "swordless_type\030\004 \001(\0162/.scalekit.v1.auth." +
      "passwordless.PasswordlessTypeB\207\001\222A|2sThe" +
      " type of passwordless authentication tha" +
      "t was successfully verified, confirming " +
      "which method the user completed.J\005\"OTP\"\272" +
      "H\005\202\001\002\020\001R\020passwordlessTypeB\010\n\006_stateB\013\n\t_" +
      "template*7\n\014TemplateType\022\017\n\013UNSPECIFIED\020" +
      "\000\022\n\n\006SIGNIN\020\001\022\n\n\006SIGNUP\020\002*V\n\020Passwordles" +
      "sType\022!\n\035PASSWORDLESS_TYPE_UNSPECIFIED\020\000" +
      "\022\007\n\003OTP\020\001\022\010\n\004LINK\020\002\022\014\n\010LINK_OTP\020\0032\254\016\n\023Pa" +
      "sswordlessService\022\264\004\n\025SendPasswordlessEm" +
      "ail\0226.scalekit.v1.auth.passwordless.Send" +
      "PasswordlessRequest\0327.scalekit.v1.auth.p" +
      "asswordless.SendPasswordlessResponse\"\251\003\222" +
      "A\365\002\n\021Passwordless Auth\022\027Send passwordles" +
      "s email\032tSend a verification email conta" +
      "ining either a verification code (OTP), " +
      "magic link, or both to a user\'s email ad" +
      "dressJ\320\001\n\003200\022\310\001\n\215\001Successfully sent pas" +
      "swordless authentication email. Returns " +
      "the authentication request details inclu" +
      "ding expiration time and auth request ID" +
      "\0226\n4\0322#/definitions/passwordlessSendPass" +
      "wordlessResponse\202\265\030\002\030\004\202\323\344\223\002$\"\037/api/v1/pa" +
      "sswordless/email/send:\001*\022\331\003\n\027VerifyPassw" +
      "ordlessEmail\0228.scalekit.v1.auth.password" +
      "less.VerifyPasswordLessRequest\0329.scaleki" +
      "t.v1.auth.passwordless.VerifyPasswordLes" +
      "sResponse\"\310\002\222A\222\002\n\021Passwordless Auth\022\031Ver" +
      "ify passwordless email\032MVerify a user\'s " +
      "identity using either a verification cod" +
      "e or magic link tokenJ\222\001\n\003200\022\212\001\nISucces" +
      "sfully verified the passwordless authent" +
      "ication. Returns user email\022=\n;\0329.scalek" +
      "it.v1.auth.passwordless.VerifyPasswordLe" +
      "ssResponse\202\265\030\002\030\004\202\323\344\223\002&\"!/api/v1/password" +
      "less/email/verify:\001*\022\245\004\n\027ResendPasswordl" +
      "essEmail\0228.scalekit.v1.auth.passwordless" +
      ".ResendPasswordlessRequest\0327.scalekit.v1" +
      ".auth.passwordless.SendPasswordlessRespo" +
      "nse\"\226\003\222A\340\002\n\021Passwordless Auth\022\031Resend pa" +
      "sswordless email\032bResend a verification " +
      "email if the user didn\'t receive it or i" +
      "f the previous code/link has expiredJ\313\001\n" +
      "\003200\022\303\001\n\203\001Successfully resent the passwo" +
      "rdless authentication email. Returns upd" +
      "ated authentication request details with" +
      " new expiration time.\022;\n9\0327.scalekit.v1." +
      "auth.passwordless.SendPasswordlessRespon" +
      "se\202\265\030\002\030\004\202\323\344\223\002&\"!/api/v1/passwordless/ema" +
      "il/resend:\001*\032\331\001\222A\325\001\n\021Passwordless Auth\022\277" +
      "\001Endpoints for sending and verifying pas" +
      "swordless authentication emails. These A" +
      "PIs allow users to authenticate without " +
      "passwords by receiving a verification co" +
      "de or magic link in their email.B\231\002\n/com" +
      ".scalekit.grpc.scalekit.v1.auth.password" +
      "lessB\021PasswordlessProtoP\001Z;github.com/sc" +
      "alekit-inc/scalekit/pkg/grpc/auth/passwo" +
      "rdless\242\002\004SVAP\252\002\035Scalekit.V1.Auth.Passwor" +
      "dless\312\002\035Scalekit\\V1\\Auth\\Passwordless\342\002)" +
      "Scalekit\\V1\\Auth\\Passwordless\\GPBMetadat" +
      "a\352\002 Scalekit::V1::Auth::Passwordlessb\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.scalekit.grpc.buf.validate.ValidateProto.getDescriptor(),
          com.scalekit.grpc.google.api.AnnotationsProto.getDescriptor(),
          com.scalekit.grpc.google.api.FieldBehaviorProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
          com.scalekit.grpc.scalekit.v1.commons.CommonsProto.getDescriptor(),
          com.scalekit.grpc.scalekit.v1.options.OptionsProto.getDescriptor(),
        });
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor,
        new java.lang.String[] { "Email", "Template", "MagiclinkAuthUri", "State", "ExpiresIn", "TemplateVariables", });
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_descriptor =
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor.getNestedTypes().get(0);
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_descriptor,
        new java.lang.String[] { "AuthRequestId", "ExpiresAt", "ExpiresIn", "PasswordlessType", });
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_descriptor,
        new java.lang.String[] { "Code", "LinkToken", "AuthRequestId", "AuthCredential", });
    internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_descriptor,
        new java.lang.String[] { "AuthRequestId", });
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_descriptor,
        new java.lang.String[] { "Email", "State", "Template", "PasswordlessType", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.scalekit.grpc.buf.validate.ValidateProto.field);
    registry.add(com.scalekit.grpc.google.api.FieldBehaviorProto.fieldBehavior);
    registry.add(com.scalekit.grpc.google.api.AnnotationsProto.http);
    registry.add(com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Field);
    registry.add(com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Operation);
    registry.add(com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Tag);
    registry.add(com.scalekit.grpc.scalekit.v1.options.OptionsProto.authOption);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.scalekit.grpc.buf.validate.ValidateProto.getDescriptor();
    com.scalekit.grpc.google.api.AnnotationsProto.getDescriptor();
    com.scalekit.grpc.google.api.FieldBehaviorProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
    com.scalekit.grpc.scalekit.v1.commons.CommonsProto.getDescriptor();
    com.scalekit.grpc.scalekit.v1.options.OptionsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
