// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scalekit/v1/auth/passwordless.proto

// Protobuf Java Version: 3.25.3
package com.scalekit.grpc.scalekit.v1.auth.passwordless;

public final class PasswordlessProto {
  private PasswordlessProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#scalekit/v1/auth/passwordless.proto\022\035s" +
      "calekit.v1.auth.passwordless\032\033buf/valida" +
      "te/validate.proto\032\034google/api/annotation" +
      "s.proto\032\037google/api/field_behavior.proto" +
      "\032\033google/protobuf/empty.proto\032\034google/pr" +
      "otobuf/struct.proto\032\037google/protobuf/tim" +
      "estamp.proto\032.protoc-gen-openapiv2/optio" +
      "ns/annotations.proto\032!scalekit/v1/common" +
      "s/commons.proto\032!scalekit/v1/options/opt" +
      "ions.proto\"\310\020\n\027SendPasswordlessRequest\022\255" +
      "\001\n\005email\030\001 \001(\tB\226\001\222A\205\0012kEmail address whe" +
      "re the passwordless authentication crede" +
      "ntials will be sent. Must be a valid ema" +
      "il format.J\026\"john.doe@example.com\"\272H\nr\005\020" +
      "\001\030\300\002\310\001\001R\005email\022\246\002\n\010template\030\002 \001(\0162+.scal" +
      "ekit.v1.auth.passwordless.TemplateTypeB\327" +
      "\001\222A\313\0012\276\001Specifies the authentication int" +
      "ent for the passwordless request. Use SI" +
      "GNIN for existing users or SIGNUP for ne" +
      "w user registration. This affects the em" +
      "ail template and user experience flow.J\010" +
      "\"SIGNIN\"\272H\005\202\001\002\020\001H\000R\010template\210\001\001\022\251\002\n\022magi" +
      "clink_auth_uri\030\003 \001(\tB\365\001\222A\344\0012\257\001Your appli" +
      "cation\'s callback URL where users will b" +
      "e redirected after clicking the magic li" +
      "nk in their email. The link token will b" +
      "e appended as a query parameter as link_" +
      "tokenJ0\"https://yourapp.com/auth/passwor" +
      "dless/callback\"\340A\001\272H\007r\005\020\001\030\350\007H\001R\020magiclin" +
      "kAuthUri\210\001\001\022\233\002\n\005state\030\004 \001(\tB\377\001\222A\356\0012\331\001Cus" +
      "tom state parameter that will be returne" +
      "d unchanged in the verification response" +
      ". Use this to maintain application state" +
      " between the authentication request and " +
      "callback, such as the intended destinati" +
      "on after loginJ\020\"d62ivasry29lso\"\340A\001\272H\007r\005" +
      "\020\001\030\350\007H\002R\005state\210\001\001\022\246\001\n\nexpires_in\030\005 \001(\rB\201" +
      "\001\222A{2tTime in seconds until the password" +
      "less authentication expires. If not spec" +
      "ified, defaults to 300 seconds (5 minute" +
      "s)J\003300\340A\001H\003R\texpiresIn\210\001\001\022\335\005\n\022template_" +
      "variables\030\006 \003(\0132M.scalekit.v1.auth.passw" +
      "ordless.SendPasswordlessRequest.Template" +
      "VariablesEntryB\336\004\222A\317\0042\232\004A set of key-val" +
      "ue pairs to personalize the email templa" +
      "te.\n\n* You may include up to 30 key-valu" +
      "e pairs.\n* The following variable names " +
      "are reserved by the system and cannot be" +
      " supplied: `otp`, `expiry_time_relative`" +
      ", `link`, `expire_time`, `expiry_time`.\n" +
      "* Every variable referenced in your emai" +
      "l template must be included as a key-val" +
      "ue pair.\n\nUse these variables to insert " +
      "custom information, such as a team name," +
      " URL or the user\'s employee ID. All vari" +
      "ables are interpolated before the email " +
      "is sent, regardless of the email provide" +
      "r.J0{\"custom_variable_key\": \"custom_vari" +
      "able_value\"}\340A\001\272H\005\232\001\002\020\036R\021templateVariabl" +
      "es\032D\n\026TemplateVariablesEntry\022\020\n\003key\030\001 \001(" +
      "\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001B\013\n\t_tem" +
      "plateB\025\n\023_magiclink_auth_uriB\010\n\006_stateB\r" +
      "\n\013_expires_in\"\234\007\n\030SendPasswordlessRespon" +
      "se\022\305\001\n\017auth_request_id\030\001 \001(\tB\234\001\222A\225\0012]Uni" +
      "que identifier for this passwordless aut" +
      "hentication request. Use this ID to rese" +
      "nd emails.J4\"h5Y8kT5RVwaea5WEgW4n-6C-aO_" +
      "-fuTUW7Vb9-Rh3AcY9qxZqQ\"\340A\003R\rauthRequest" +
      "Id\022\314\001\n\nexpires_at\030\002 \001(\003B\254\001\222A\245\0012\226\001Unix ti" +
      "mestamp (seconds since epoch) when the p" +
      "asswordless authentication will expire. " +
      "After this time, the OTP or magic link w" +
      "ill no longer be valid.J\n1748696575\340A\003R\t" +
      "expiresAt\022\276\001\n\nexpires_in\030\003 \001(\rB\236\001\222A\227\0012\217\001" +
      "Number of seconds from now until the pas" +
      "swordless authentication expires. This i" +
      "s a convenience field calculated from th" +
      "e expires_at timestamp.J\003300\340A\003R\texpires" +
      "In\022\247\002\n\021passwordless_type\030\004 \001(\0162/.scaleki" +
      "t.v1.auth.passwordless.PasswordlessTypeB" +
      "\310\001\222A\274\0012\262\001Type of passwordless authentica" +
      "tion that was sent via email. OTP sends " +
      "a numeric code, LINK sends a clickable m" +
      "agic link, and LINK_OTP provides both op" +
      "tions for user convenience.J\005\"OTP\"\272H\005\202\001\002" +
      "\020\001R\020passwordlessType\"\264\006\n\031VerifyPasswordL" +
      "essRequest\022\275\001\n\004code\030\001 \001(\tB\246\001\222A\231\0012\214\001The V" +
      "erification Code (OTP) received via emai" +
      "l. This is typically a 6-digit numeric c" +
      "ode that users enter manually to verify " +
      "their identity.J\010\"123456\"\272H\006r\004\020\001\030\024H\000R\004co" +
      "de\022\212\002\n\nlink_token\030\002 \001(\tB\350\001\222A\333\0012\260\001The uni" +
      "que token from the magic link URL receiv" +
      "ed via email. Extract this token when us" +
      "ers click the magic link and are redirec" +
      "ted to your application to later verify " +
      "the user.J&\"afe9d61c-d80d-4020-a8ee-6176" +
      "5ab71cb3\"\272H\006r\004\020\001\030dH\000R\tlinkToken\022\242\002\n\017auth" +
      "_request_id\030\003 \001(\tB\364\001\222A\350\0012\257\001The authentic" +
      "ation request identifier returned from t" +
      "he send passwordless email endpoint. Req" +
      "uired when verifying OTP codes to link t" +
      "he verification with the original reques" +
      "t.J4\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fuTUW7V" +
      "b9-Rh3AcY9qxZqQ\"\272H\005r\003\030\310\001H\001R\rauthRequestI" +
      "d\210\001\001B\021\n\017auth_credentialB\022\n\020_auth_request" +
      "_id\"\301\002\n\031ResendPasswordlessRequest\022\243\002\n\017au" +
      "th_request_id\030\001 \001(\tB\372\001\222A\351\0012\260\001The authent" +
      "ication request identifier from the orig" +
      "inal send passwordless email request. Us" +
      "e this to resend the Verification Code (" +
      "OTP) or Magic Link to the same email add" +
      "ress.J4\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fuTU" +
      "W7Vb9-Rh3AcY9qxZqQ\"\272H\nr\005\020\001\030\310\001\310\001\001R\rauthRe" +
      "questId\"\224\007\n\032VerifyPasswordLessResponse\022\274" +
      "\001\n\005email\030\001 \001(\tB\245\001\222A\236\0012\203\001Email address of" +
      " the successfully authenticated user. Th" +
      "is confirms which email account was veri" +
      "fied through the passwordless flow.J\026\"jo" +
      "hn.doe@example.com\"\340A\003R\005email\022\350\001\n\005state\030" +
      "\002 \001(\tB\314\001\222A\305\0012\255\001The custom state paramete" +
      "r that was provided in the original auth" +
      "entication request, returned unchanged. " +
      "Use this to restore your application\'s c" +
      "ontext after authentication.J\023\"kdt7yiag2" +
      "8t341fr1\"\340A\003H\000R\005state\210\001\001\022\313\001\n\010template\030\003 " +
      "\001(\0162+.scalekit.v1.auth.passwordless.Temp" +
      "lateTypeB}\222Ar2fSpecifies which email tem" +
      "plate to choose. For User Signin choose " +
      "SIGNIN and for User Signup use SIGNUPJ\010\"" +
      "SIGNIN\"\272H\005\202\001\002\020\001H\001R\010template\210\001\001\022\346\001\n\021passw" +
      "ordless_type\030\004 \001(\0162/.scalekit.v1.auth.pa" +
      "sswordless.PasswordlessTypeB\207\001\222A|2sThe t" +
      "ype of passwordless authentication that " +
      "was successfully verified, confirming wh" +
      "ich method the user completed.J\005\"OTP\"\272H\005" +
      "\202\001\002\020\001R\020passwordlessTypeB\010\n\006_stateB\013\n\t_te" +
      "mplate*7\n\014TemplateType\022\017\n\013UNSPECIFIED\020\000\022" +
      "\n\n\006SIGNIN\020\001\022\n\n\006SIGNUP\020\002*V\n\020PasswordlessT" +
      "ype\022!\n\035PASSWORDLESS_TYPE_UNSPECIFIED\020\000\022\007" +
      "\n\003OTP\020\001\022\010\n\004LINK\020\002\022\014\n\010LINK_OTP\020\0032\254\016\n\023Pass" +
      "wordlessService\022\264\004\n\025SendPasswordlessEmai" +
      "l\0226.scalekit.v1.auth.passwordless.SendPa" +
      "sswordlessRequest\0327.scalekit.v1.auth.pas" +
      "swordless.SendPasswordlessResponse\"\251\003\222A\365" +
      "\002\n\021Passwordless Auth\022\027Send passwordless " +
      "email\032tSend a verification email contain" +
      "ing either a verification code (OTP), ma" +
      "gic link, or both to a user\'s email addr" +
      "essJ\320\001\n\003200\022\310\001\n\215\001Successfully sent passw" +
      "ordless authentication email. Returns th" +
      "e authentication request details includi" +
      "ng expiration time and auth request ID\0226" +
      "\n4\0322#/definitions/passwordlessSendPasswo" +
      "rdlessResponse\202\265\030\002\030\004\202\323\344\223\002$\"\037/api/v1/pass" +
      "wordless/email/send:\001*\022\331\003\n\027VerifyPasswor" +
      "dlessEmail\0228.scalekit.v1.auth.passwordle" +
      "ss.VerifyPasswordLessRequest\0329.scalekit." +
      "v1.auth.passwordless.VerifyPasswordLessR" +
      "esponse\"\310\002\222A\222\002\n\021Passwordless Auth\022\031Verif" +
      "y passwordless email\032MVerify a user\'s id" +
      "entity using either a verification code " +
      "or magic link tokenJ\222\001\n\003200\022\212\001\nISuccessf" +
      "ully verified the passwordless authentic" +
      "ation. Returns user email\022=\n;\0329.scalekit" +
      ".v1.auth.passwordless.VerifyPasswordLess" +
      "Response\202\265\030\002\030\004\202\323\344\223\002&\"!/api/v1/passwordle" +
      "ss/email/verify:\001*\022\245\004\n\027ResendPasswordles" +
      "sEmail\0228.scalekit.v1.auth.passwordless.R" +
      "esendPasswordlessRequest\0327.scalekit.v1.a" +
      "uth.passwordless.SendPasswordlessRespons" +
      "e\"\226\003\222A\340\002\n\021Passwordless Auth\022\031Resend pass" +
      "wordless email\032bResend a verification em" +
      "ail if the user didn\'t receive it or if " +
      "the previous code/link has expiredJ\313\001\n\0032" +
      "00\022\303\001\n\203\001Successfully resent the password" +
      "less authentication email. Returns updat" +
      "ed authentication request details with n" +
      "ew expiration time.\022;\n9\0327.scalekit.v1.au" +
      "th.passwordless.SendPasswordlessResponse" +
      "\202\265\030\002\030\004\202\323\344\223\002&\"!/api/v1/passwordless/email" +
      "/resend:\001*\032\331\001\222A\325\001\n\021Passwordless Auth\022\277\001E" +
      "ndpoints for sending and verifying passw" +
      "ordless authentication emails. These API" +
      "s allow users to authenticate without pa" +
      "sswords by receiving a verification code" +
      " or magic link in their email.B\231\002\n/com.s" +
      "calekit.grpc.scalekit.v1.auth.passwordle" +
      "ssB\021PasswordlessProtoP\001Z;github.com/scal" +
      "ekit-inc/scalekit/pkg/grpc/auth/password" +
      "less\242\002\004SVAP\252\002\035Scalekit.V1.Auth.Passwordl" +
      "ess\312\002\035Scalekit\\V1\\Auth\\Passwordless\342\002)Sc" +
      "alekit\\V1\\Auth\\Passwordless\\GPBMetadata\352" +
      "\002 Scalekit::V1::Auth::Passwordlessb\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.scalekit.grpc.buf.validate.ValidateProto.getDescriptor(),
          com.scalekit.grpc.google.api.AnnotationsProto.getDescriptor(),
          com.scalekit.grpc.google.api.FieldBehaviorProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor(),
          com.scalekit.grpc.scalekit.v1.commons.CommonsProto.getDescriptor(),
          com.scalekit.grpc.scalekit.v1.options.OptionsProto.getDescriptor(),
        });
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor,
        new java.lang.String[] { "Email", "Template", "MagiclinkAuthUri", "State", "ExpiresIn", "TemplateVariables", });
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_descriptor =
      internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_descriptor.getNestedTypes().get(0);
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_SendPasswordlessRequest_TemplateVariablesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_SendPasswordlessResponse_descriptor,
        new java.lang.String[] { "AuthRequestId", "ExpiresAt", "ExpiresIn", "PasswordlessType", });
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessRequest_descriptor,
        new java.lang.String[] { "Code", "LinkToken", "AuthRequestId", "AuthCredential", });
    internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_ResendPasswordlessRequest_descriptor,
        new java.lang.String[] { "AuthRequestId", });
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_scalekit_v1_auth_passwordless_VerifyPasswordLessResponse_descriptor,
        new java.lang.String[] { "Email", "State", "Template", "PasswordlessType", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.scalekit.grpc.buf.validate.ValidateProto.field);
    registry.add(com.scalekit.grpc.google.api.FieldBehaviorProto.fieldBehavior);
    registry.add(com.scalekit.grpc.google.api.AnnotationsProto.http);
    registry.add(com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Field);
    registry.add(com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Operation);
    registry.add(com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.openapiv2Tag);
    registry.add(com.scalekit.grpc.scalekit.v1.options.OptionsProto.authOption);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.scalekit.grpc.buf.validate.ValidateProto.getDescriptor();
    com.scalekit.grpc.google.api.AnnotationsProto.getDescriptor();
    com.scalekit.grpc.google.api.FieldBehaviorProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.scalekit.grpc.grpc.gateway.protoc_gen_openapiv2.options.AnnotationsProto.getDescriptor();
    com.scalekit.grpc.scalekit.v1.commons.CommonsProto.getDescriptor();
    com.scalekit.grpc.scalekit.v1.options.OptionsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
